# 기본 설정
spring:
  application:
    name: spring-library-system

  # 프로파일 설정
  profiles:
    active: dev

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop  # 테이블 자동 생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true  # ⭐⭐⭐ 매우 중요!

  # SQL 스크립트 실행
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql

# 로깅 설정
logging:
  level:
    com.example.library: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# 커스텀 설정
library:
  loan:
    default-period-weeks: 2
    max-renewal-count: 2
  notification:
    email:
      enabled: true
      from: library@example.com

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev

  # H2 데이터베이스 설정
  datasource:
    # url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    # url: jdbc:h2:tcp://localhost:9092/mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: jdbc:h2:file:./data/testdb;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9093
    username: sa
    password:
    driver-class-name: org.h2.Driver

  # H2 Console 활성화
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

# 서버 설정
server:
  port: 8080

---
# 테스트 환경 설정
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:mysql://localhost:3306/library_system
    username: ${DB_USERNAME:library_user}
    password: ${DB_PASSWORD:library_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

server:
  port: 80

library:
  notification:
    email:
      smtp:
        host: smtp.company.com
        port: 587
        username: ${SMTP_USERNAME}
        password: ${SMTP_PASSWORD}