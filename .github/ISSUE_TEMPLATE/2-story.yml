name: 📖 Story
description: 사용자 관점의 기능을 위한 Story 이슈
title: "[STORY] "
labels: ["story"]
projects: ["day-by-spring"]
body:
  - type: markdown
    attributes:
      value: |
        # 📖 Story Issue Template
        
        사용자 관점에서의 기능을 정의하고 관리하기 위한 템플릿입니다.
        Story는 여러 개의 Task로 구성됩니다.

  - type: input
    id: story-title
    attributes:
      label: "📋 Story 제목"
      description: "Story의 명확한 제목을 입력하세요"
      placeholder: "예: 회원 기본 CRUD 구현"
    validations:
      required: true

  - type: input
    id: parent-epic
    attributes:
      label: "🏗️ 상위 Epic"
      description: "이 Story가 속하는 Epic 번호를 입력하세요"
      placeholder: "예: #10"
    validations:
      required: true

  - type: dropdown
    id: domain
    attributes:
      label: "🏢 도메인"
      description: "Story가 속하는 도메인을 선택하세요"
      options:
        - member
        - book
        - order
        - loan
        - payment
        - statistics
        - system
        - infrastructure
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: "🔥 우선순위"
      description: "Story의 우선순위를 선택하세요"
      options:
        - critical
        - high
        - medium
        - low
    validations:
      required: true

  - type: textarea
    id: user-story
    attributes:
      label: "👤 사용자 스토리"
      description: "사용자 관점에서 Story를 작성하세요"
      placeholder: |
        **As a** [사용자 역할]
        **I want** [원하는 기능]
        **So that** [기대하는 이익/목적]
        
        예시:
        **As a** 도서관 관리자
        **I want** 회원 정보를 등록, 조회, 수정, 삭제할 수 있는 기능
        **So that** 회원을 효율적으로 관리할 수 있다
    validations:
      required: true

  - type: textarea
    id: story-description
    attributes:
      label: "📝 Story 상세 설명"
      description: "Story의 세부 내용과 요구사항을 설명하세요"
      placeholder: |
        ## 기능 개요
        - 이 Story에서 구현할 기능들을 나열하세요
        
        ## 비즈니스 요구사항
        - 비즈니스 로직과 규칙들을 설명하세요
        
        ## 기술적 요구사항
        - 기술적 제약사항이나 요구사항을 나열하세요
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: "✅ 인수 기준"
      description: "Story가 완료되었다고 판단할 수 있는 구체적인 조건들"
      placeholder: |
        **Given** [전제 조건]
        **When** [사용자 행동]
        **Then** [예상 결과]
        
        예시:
        - [ ] **Given** 관리자로 로그인했을 때, **When** 회원 등록 폼에 유효한 정보를 입력하면, **Then** 새 회원이 성공적으로 등록된다
        - [ ] **Given** 회원 목록 페이지에서, **When** 특정 회원을 클릭하면, **Then** 해당 회원의 상세 정보가 표시된다
        - [ ] **Given** 회원 수정 페이지에서, **When** 정보를 수정하고 저장하면, **Then** 변경사항이 데이터베이스에 반영된다
        - [ ] **Given** 회원을 삭제할 때, **When** 삭제 확인을 하면, **Then** 해당 회원이 시스템에서 제거된다
    validations:
      required: true

  - type: input
    id: estimated-effort
    attributes:
      label: "⏱️ 예상 소요시간"
      description: "Story 완료까지 예상되는 시간 (예: 16시간, 2일)"
      placeholder: "예: 20시간"

  - type: textarea
    id: related-tasks
    attributes:
      label: "📋 관련 Task 목록"
      description: "이 Story에 포함될 Task들을 나열하세요 (생성 후 링크 업데이트)"
      placeholder: |
        - [ ] Task 1: Member Entity 설계 및 구현
        - [ ] Task 2: MemberRepository 인터페이스 구현
        - [ ] Task 3: MemberService 비즈니스 로직 구현
        - [ ] Task 4: MemberController REST API 구현
        - [ ] Task 5: 입력 검증 및 예외 처리

  - type: textarea
    id: ui-requirements
    attributes:
      label: "🎨 UI/UX 요구사항"
      description: "화면 구성이나 사용자 경험과 관련된 요구사항"
      placeholder: |
        ## 화면 구성
        - 필요한 화면들과 레이아웃을 설명하세요
        
        ## 사용자 경험
        - 사용성과 관련된 요구사항을 나열하세요
        
        ## 반응형
        - 모바일/태블릿 대응 요구사항

  - type: textarea
    id: dependencies
    attributes:
      label: "🔗 의존성"
      description: "이 Story가 의존하는 다른 Story나 외부 요소들"
      placeholder: |
        ## 선행 Story
        - #123 (Story: 기본 인증 시스템)
        
        ## 외부 의존성
        - 데이터베이스 테이블 생성
        - 외부 API 연동

  - type: input
    id: milestone
    attributes:
      label: "🎯 마일스톤"
      description: "이 Story가 속할 마일스톤"
      placeholder: "예: Phase 1: 회원 & 도서 관리"